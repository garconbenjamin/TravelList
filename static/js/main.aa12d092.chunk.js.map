{"version":3,"sources":["context.js","components/ItemCard.js","pages/TravelList.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","Provider","Consumer","ItemCard","props","data","id","index","name","name_zh","distric","official_site","category","images","to","className","style","backgroundImage","src","map","cat","idx","filter","key","target","href","onClick","e","stopPropagation","TavelList","contextValue","useContext","content","dispatch","isLoading","ele","i","Array","length","type","initState","currentPage","totalPage","likedSpot","categories","active","todoReducer","state","action","newItem","payload","newPage","newArr","App","useReducer","useState","setContent","setIsLoading","globalState","useEffect","ignore","setTimeout","a","async","fetch","headers","accept","result","json","jsonObj","fetchData","value","TravelList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa12d092.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nconst context = createContext();\nexport const { Provider, Consumer } = context;\nexport default context;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GoLocation } from \"react-icons/go\";\nimport { MdWeb } from \"react-icons/md\";\nimport { Link } from \"wouter\";\n\nconst ItemCard = props => {\n  const { data, index } = props;\n\n  const { id, name, name_zh, distric, official_site, category, images } = data;\n  return (\n    <Link to={`/${id}`}>\n      <div className=\"card-wrapper\">\n        <div className=\"card\">\n          <div\n            className=\"card-img\"\n            style={\n              images[0] ? { backgroundImage: `url(${images[0].src})` } : null\n            }\n          >\n            {images[0] ? null : <span className=\"text-holder\">No Image</span>}\n          </div>\n          <div className=\"card-text\">\n            <div className=\"title\"> {name || name_zh}</div>\n            <ul>\n              {distric ? (\n                <li>\n                  <GoLocation />\n                  <span>{distric}</span>\n                </li>\n              ) : null}\n\n              <li>\n                {category\n                  ? category.map((cat, idx) => (\n                      <span\n                        className=\"hashtag\"\n                        style={{\n                          filter: `hue-rotate(${+cat.id * 5}deg)`\n                        }}\n                        key={idx}\n                      >\n                        #{cat.name}\n                      </span>\n                    ))\n                  : null}\n              </li>\n            </ul>\n            {official_site ? (\n              <a\n                target=\"_blank\"\n                className=\"official-site\"\n                href={official_site}\n                onClick={e => {\n                  e.stopPropagation();\n                }}\n              >\n                <MdWeb />\n                官方網站\b\n              </a>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\nexport default ItemCard;\n","import React, { useContext } from \"react\";\nimport context from \"./../context\";\nimport ItemCard from \"./../components/ItemCard\";\n\nconst TavelList = () => {\n  const contextValue = useContext(context);\n  const { content, dispatch, isLoading } = contextValue;\n\n\n  return (\n    <div className=\"travel-list\">\n      <div className=\"card-list\">\n        {content.map((ele, i) => {\n          return <ItemCard data={ele} index={i} key={i} />;\n        })}\n        {isLoading\n          ? [...Array(4)].map((ele, index) => (\n              <div className=\"card-wrapper\" key={index}>\n                <div className=\"card skeleton\">Loading...</div>\n              </div>\n            ))\n          : null}\n      </div>\n      {content.length ? (\n        <div className=\"button-wrapper\">\n          <button\n            className={isLoading ? \"loading\" : \"\"}\n            onClick={() => {\n              dispatch({ type: \"NEXT_PAGE\" });\n            }}\n          >\n            <span>Load more</span>\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\nexport default TavelList;\n","import React, { useReducer, useEffect, useState } from \"react\";\nimport { Provider } from \"./context\";\nimport TravelInfo from \"./pages/TravelInfo\";\nimport TravelList from \"./pages/TravelList\";\nimport { Router, Route } from \"wouter\";\n\nconst categories = [\n  { id: 11, name: \"養生溫泉\", active: false },\n  { id: 12, name: \"單車遊蹤\", active: false },\n  { id: 13, name: \"歷史建築\", active: false },\n  { id: 14, name: \"宗教信仰\", active: false },\n  { id: 15, name: \"藝文館所\", active: false },\n  { id: 18, name: \"公共藝術\", active: false },\n  { id: 16, name: \"戶外踏青\", active: false },\n  { id: 17, name: \"藍色水路\", active: false },\n  { id: 19, name: \"親子共遊\", active: false },\n  { id: 20, name: \"北北基景點\", active: false },\n  { id: 23, name: \"夜市商圈\", active: false },\n  { id: 24, name: \"主題商街\", active: false },\n  { id: 25, name: \"無障礙旅遊推薦景點\", active: false }\n];\n\nconst initState = { currentPage: 1, totalPage: 0, likedSpot: [], categories };\nconst todoReducer = (state, action) => {\n  const { currentPage, totalPage, categories, likedSpot } = state;\n  switch (action.type) {\n    case \"ADD_LIKE\":\n      const newItem = action.payload;\n      return { ...state, likedSpot: [...likedSpot, newItem] };\n    case \"NEXT_PAGE\":\n      const newPage = currentPage + 1;\n      return { ...state, currentPage: newPage };\n    case \"REMOVE_LIKE\":\n      const { id } = action.payload;\n      const newArr = likedSpot.filter(ele => ele.id !== id);\n      return { ...state, likedSpot: newArr };\n    default:\n      return state;\n  }\n};\nconst Header = props => {\n  const { text } = props;\n  return <header>{text}</header>;\n};\nconst App = () => {\n  const [state, dispatch] = useReducer(todoReducer, initState);\n  const { totalPage, currentPage } = state;\n  const [content, setContent] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const globalState = { state, dispatch, content, isLoading };\n  useEffect(() => {\n    let ignore = false;\n    const fetchData = async () => {\n      const result = await fetch(\n        `https://www.travel.taipei/open-api/zh-tw/Attractions/All?page=${currentPage}`,\n        {\n          headers: {\n            accept: \"application/json\"\n          }\n        }\n      );\n      const jsonObj = await result.json();\n      const { data } = jsonObj;\n\n      if (!ignore) {\n        setContent([...content, ...data]);\n      }\n    };\n    if (currentPage > totalPage) {\n      setIsLoading(true);\n\n      setTimeout(() => {\n        fetchData();\n      }, 1500);\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 2000);\n    }\n\n    return () => {\n      ignore = true;\n    };\n  }, [currentPage]);\n\n  return (\n    <Provider value={globalState}>\n      <TravelList />\n      {/* <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\">\n          <Header text=\"台北市特色景點\" />\n          <TravelList />\n        </Route>\n        <Route path=\"/:id\">{params => <TravelInfo params={params} />}</Route>\n      </Router> */}\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./stylesheets/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}